//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Kraken.SharePoint.Cloud.UserProfileServiceWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserProfileServiceSoap", Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SPTimeZone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyData[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ValueData[]))]
    public partial class UserProfileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserProfileByIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserProfileByAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileSchemaNameByAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyChoiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserPropertyByAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPropertyByAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMemberGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMembershipPrivacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMembershipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOrganizationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserColleaguesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPinnedLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInCommonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonColleaguesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonMembershipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddColleagueWithoutEmailNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateColleaguePrivacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPinnedLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePinnedLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePinnedLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllPinnedLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllColleaguesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllMembershipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSuggestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileSchemaNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeadersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLeaderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserProfileService() {
            this.Url = global::Kraken.SharePoint.Cloud.Properties.Settings.Default.Kraken_SharePoint_Cloud_UserProfileServiceWS_UserProfileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserProfileByIndexCompletedEventHandler GetUserProfileByIndexCompleted;
        
        /// <remarks/>
        public event CreateUserProfileByAccountNameCompletedEventHandler CreateUserProfileByAccountNameCompleted;
        
        /// <remarks/>
        public event GetUserProfileByNameCompletedEventHandler GetUserProfileByNameCompleted;
        
        /// <remarks/>
        public event GetUserProfileByGuidCompletedEventHandler GetUserProfileByGuidCompleted;
        
        /// <remarks/>
        public event GetUserProfileSchemaCompletedEventHandler GetUserProfileSchemaCompleted;
        
        /// <remarks/>
        public event GetProfileSchemaNameByAccountNameCompletedEventHandler GetProfileSchemaNameByAccountNameCompleted;
        
        /// <remarks/>
        public event GetPropertyChoiceListCompletedEventHandler GetPropertyChoiceListCompleted;
        
        /// <remarks/>
        public event ModifyUserPropertyByAccountNameCompletedEventHandler ModifyUserPropertyByAccountNameCompleted;
        
        /// <remarks/>
        public event GetUserPropertyByAccountNameCompletedEventHandler GetUserPropertyByAccountNameCompleted;
        
        /// <remarks/>
        public event CreateMemberGroupCompletedEventHandler CreateMemberGroupCompleted;
        
        /// <remarks/>
        public event AddMembershipCompletedEventHandler AddMembershipCompleted;
        
        /// <remarks/>
        public event RemoveMembershipCompletedEventHandler RemoveMembershipCompleted;
        
        /// <remarks/>
        public event UpdateMembershipPrivacyCompletedEventHandler UpdateMembershipPrivacyCompleted;
        
        /// <remarks/>
        public event GetUserMembershipsCompletedEventHandler GetUserMembershipsCompleted;
        
        /// <remarks/>
        public event GetUserOrganizationsCompletedEventHandler GetUserOrganizationsCompleted;
        
        /// <remarks/>
        public event GetUserColleaguesCompletedEventHandler GetUserColleaguesCompleted;
        
        /// <remarks/>
        public event GetUserLinksCompletedEventHandler GetUserLinksCompleted;
        
        /// <remarks/>
        public event GetUserPinnedLinksCompletedEventHandler GetUserPinnedLinksCompleted;
        
        /// <remarks/>
        public event GetInCommonCompletedEventHandler GetInCommonCompleted;
        
        /// <remarks/>
        public event GetCommonManagerCompletedEventHandler GetCommonManagerCompleted;
        
        /// <remarks/>
        public event GetCommonColleaguesCompletedEventHandler GetCommonColleaguesCompleted;
        
        /// <remarks/>
        public event GetCommonMembershipsCompletedEventHandler GetCommonMembershipsCompleted;
        
        /// <remarks/>
        public event AddColleagueCompletedEventHandler AddColleagueCompleted;
        
        /// <remarks/>
        public event AddColleagueWithoutEmailNotificationCompletedEventHandler AddColleagueWithoutEmailNotificationCompleted;
        
        /// <remarks/>
        public event RemoveColleagueCompletedEventHandler RemoveColleagueCompleted;
        
        /// <remarks/>
        public event UpdateColleaguePrivacyCompletedEventHandler UpdateColleaguePrivacyCompleted;
        
        /// <remarks/>
        public event AddPinnedLinkCompletedEventHandler AddPinnedLinkCompleted;
        
        /// <remarks/>
        public event UpdatePinnedLinkCompletedEventHandler UpdatePinnedLinkCompleted;
        
        /// <remarks/>
        public event RemovePinnedLinkCompletedEventHandler RemovePinnedLinkCompleted;
        
        /// <remarks/>
        public event AddLinkCompletedEventHandler AddLinkCompleted;
        
        /// <remarks/>
        public event UpdateLinkCompletedEventHandler UpdateLinkCompleted;
        
        /// <remarks/>
        public event RemoveLinkCompletedEventHandler RemoveLinkCompleted;
        
        /// <remarks/>
        public event RemoveAllLinksCompletedEventHandler RemoveAllLinksCompleted;
        
        /// <remarks/>
        public event RemoveAllPinnedLinksCompletedEventHandler RemoveAllPinnedLinksCompleted;
        
        /// <remarks/>
        public event RemoveAllColleaguesCompletedEventHandler RemoveAllColleaguesCompleted;
        
        /// <remarks/>
        public event RemoveAllMembershipsCompletedEventHandler RemoveAllMembershipsCompleted;
        
        /// <remarks/>
        public event GetUserProfileCountCompletedEventHandler GetUserProfileCountCompleted;
        
        /// <remarks/>
        public event AddSuggestionsCompletedEventHandler AddSuggestionsCompleted;
        
        /// <remarks/>
        public event GetProfileSchemaNamesCompletedEventHandler GetProfileSchemaNamesCompleted;
        
        /// <remarks/>
        public event GetProfileSchemaCompletedEventHandler GetProfileSchemaCompleted;
        
        /// <remarks/>
        public event GetLeadersCompletedEventHandler GetLeadersCompleted;
        
        /// <remarks/>
        public event AddLeaderCompletedEventHandler AddLeaderCompleted;
        
        /// <remarks/>
        public event RemoveLeaderCompletedEventHandler RemoveLeaderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rProfileByIndex", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserProfileByIndexResult GetUserProfileByIndex(int index) {
            object[] results = this.Invoke("GetUserProfileByIndex", new object[] {
                        index});
            return ((GetUserProfileByIndexResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileByIndexAsync(int index) {
            this.GetUserProfileByIndexAsync(index, null);
        }
        
        /// <remarks/>
        public void GetUserProfileByIndexAsync(int index, object userState) {
            if ((this.GetUserProfileByIndexOperationCompleted == null)) {
                this.GetUserProfileByIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileByIndexOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileByIndex", new object[] {
                        index}, this.GetUserProfileByIndexOperationCompleted, userState);
        }
        
        private void OnGetUserProfileByIndexOperationCompleted(object arg) {
            if ((this.GetUserProfileByIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileByIndexCompleted(this, new GetUserProfileByIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Create" +
            "UserProfileByAccountName", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyData[] CreateUserProfileByAccountName(string accountName) {
            object[] results = this.Invoke("CreateUserProfileByAccountName", new object[] {
                        accountName});
            return ((PropertyData[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserProfileByAccountNameAsync(string accountName) {
            this.CreateUserProfileByAccountNameAsync(accountName, null);
        }
        
        /// <remarks/>
        public void CreateUserProfileByAccountNameAsync(string accountName, object userState) {
            if ((this.CreateUserProfileByAccountNameOperationCompleted == null)) {
                this.CreateUserProfileByAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserProfileByAccountNameOperationCompleted);
            }
            this.InvokeAsync("CreateUserProfileByAccountName", new object[] {
                        accountName}, this.CreateUserProfileByAccountNameOperationCompleted, userState);
        }
        
        private void OnCreateUserProfileByAccountNameOperationCompleted(object arg) {
            if ((this.CreateUserProfileByAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserProfileByAccountNameCompleted(this, new CreateUserProfileByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rProfileByName", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyData[] GetUserProfileByName(string AccountName) {
            object[] results = this.Invoke("GetUserProfileByName", new object[] {
                        AccountName});
            return ((PropertyData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileByNameAsync(string AccountName) {
            this.GetUserProfileByNameAsync(AccountName, null);
        }
        
        /// <remarks/>
        public void GetUserProfileByNameAsync(string AccountName, object userState) {
            if ((this.GetUserProfileByNameOperationCompleted == null)) {
                this.GetUserProfileByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileByNameOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileByName", new object[] {
                        AccountName}, this.GetUserProfileByNameOperationCompleted, userState);
        }
        
        private void OnGetUserProfileByNameOperationCompleted(object arg) {
            if ((this.GetUserProfileByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileByNameCompleted(this, new GetUserProfileByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rProfileByGuid", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyData[] GetUserProfileByGuid(System.Guid guid) {
            object[] results = this.Invoke("GetUserProfileByGuid", new object[] {
                        guid});
            return ((PropertyData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileByGuidAsync(System.Guid guid) {
            this.GetUserProfileByGuidAsync(guid, null);
        }
        
        /// <remarks/>
        public void GetUserProfileByGuidAsync(System.Guid guid, object userState) {
            if ((this.GetUserProfileByGuidOperationCompleted == null)) {
                this.GetUserProfileByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileByGuidOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileByGuid", new object[] {
                        guid}, this.GetUserProfileByGuidOperationCompleted, userState);
        }
        
        private void OnGetUserProfileByGuidOperationCompleted(object arg) {
            if ((this.GetUserProfileByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileByGuidCompleted(this, new GetUserProfileByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rProfileSchema", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyInfo[] GetUserProfileSchema() {
            object[] results = this.Invoke("GetUserProfileSchema", new object[0]);
            return ((PropertyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileSchemaAsync() {
            this.GetUserProfileSchemaAsync(null);
        }
        
        /// <remarks/>
        public void GetUserProfileSchemaAsync(object userState) {
            if ((this.GetUserProfileSchemaOperationCompleted == null)) {
                this.GetUserProfileSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileSchemaOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileSchema", new object[0], this.GetUserProfileSchemaOperationCompleted, userState);
        }
        
        private void OnGetUserProfileSchemaOperationCompleted(object arg) {
            if ((this.GetUserProfileSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileSchemaCompleted(this, new GetUserProfileSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro" +
            "fileSchemaNameByAccountName", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProfileSchemaNameByAccountName(string accountName) {
            object[] results = this.Invoke("GetProfileSchemaNameByAccountName", new object[] {
                        accountName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileSchemaNameByAccountNameAsync(string accountName) {
            this.GetProfileSchemaNameByAccountNameAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetProfileSchemaNameByAccountNameAsync(string accountName, object userState) {
            if ((this.GetProfileSchemaNameByAccountNameOperationCompleted == null)) {
                this.GetProfileSchemaNameByAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileSchemaNameByAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetProfileSchemaNameByAccountName", new object[] {
                        accountName}, this.GetProfileSchemaNameByAccountNameOperationCompleted, userState);
        }
        
        private void OnGetProfileSchemaNameByAccountNameOperationCompleted(object arg) {
            if ((this.GetProfileSchemaNameByAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileSchemaNameByAccountNameCompleted(this, new GetProfileSchemaNameByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro" +
            "pertyChoiceList", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPropertyChoiceList(string propertyName) {
            object[] results = this.Invoke("GetPropertyChoiceList", new object[] {
                        propertyName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyChoiceListAsync(string propertyName) {
            this.GetPropertyChoiceListAsync(propertyName, null);
        }
        
        /// <remarks/>
        public void GetPropertyChoiceListAsync(string propertyName, object userState) {
            if ((this.GetPropertyChoiceListOperationCompleted == null)) {
                this.GetPropertyChoiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyChoiceListOperationCompleted);
            }
            this.InvokeAsync("GetPropertyChoiceList", new object[] {
                        propertyName}, this.GetPropertyChoiceListOperationCompleted, userState);
        }
        
        private void OnGetPropertyChoiceListOperationCompleted(object arg) {
            if ((this.GetPropertyChoiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyChoiceListCompleted(this, new GetPropertyChoiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Modify" +
            "UserPropertyByAccountName", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyUserPropertyByAccountName(string accountName, PropertyData[] newData) {
            this.Invoke("ModifyUserPropertyByAccountName", new object[] {
                        accountName,
                        newData});
        }
        
        /// <remarks/>
        public void ModifyUserPropertyByAccountNameAsync(string accountName, PropertyData[] newData) {
            this.ModifyUserPropertyByAccountNameAsync(accountName, newData, null);
        }
        
        /// <remarks/>
        public void ModifyUserPropertyByAccountNameAsync(string accountName, PropertyData[] newData, object userState) {
            if ((this.ModifyUserPropertyByAccountNameOperationCompleted == null)) {
                this.ModifyUserPropertyByAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserPropertyByAccountNameOperationCompleted);
            }
            this.InvokeAsync("ModifyUserPropertyByAccountName", new object[] {
                        accountName,
                        newData}, this.ModifyUserPropertyByAccountNameOperationCompleted, userState);
        }
        
        private void OnModifyUserPropertyByAccountNameOperationCompleted(object arg) {
            if ((this.ModifyUserPropertyByAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserPropertyByAccountNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rPropertyByAccountName", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyData GetUserPropertyByAccountName(string accountName, string propertyName) {
            object[] results = this.Invoke("GetUserPropertyByAccountName", new object[] {
                        accountName,
                        propertyName});
            return ((PropertyData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPropertyByAccountNameAsync(string accountName, string propertyName) {
            this.GetUserPropertyByAccountNameAsync(accountName, propertyName, null);
        }
        
        /// <remarks/>
        public void GetUserPropertyByAccountNameAsync(string accountName, string propertyName, object userState) {
            if ((this.GetUserPropertyByAccountNameOperationCompleted == null)) {
                this.GetUserPropertyByAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPropertyByAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetUserPropertyByAccountName", new object[] {
                        accountName,
                        propertyName}, this.GetUserPropertyByAccountNameOperationCompleted, userState);
        }
        
        private void OnGetUserPropertyByAccountNameOperationCompleted(object arg) {
            if ((this.GetUserPropertyByAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPropertyByAccountNameCompleted(this, new GetUserPropertyByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Create" +
            "MemberGroup", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMemberGroup(MembershipData membershipInfo) {
            this.Invoke("CreateMemberGroup", new object[] {
                        membershipInfo});
        }
        
        /// <remarks/>
        public void CreateMemberGroupAsync(MembershipData membershipInfo) {
            this.CreateMemberGroupAsync(membershipInfo, null);
        }
        
        /// <remarks/>
        public void CreateMemberGroupAsync(MembershipData membershipInfo, object userState) {
            if ((this.CreateMemberGroupOperationCompleted == null)) {
                this.CreateMemberGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMemberGroupOperationCompleted);
            }
            this.InvokeAsync("CreateMemberGroup", new object[] {
                        membershipInfo}, this.CreateMemberGroupOperationCompleted, userState);
        }
        
        private void OnCreateMemberGroupOperationCompleted(object arg) {
            if ((this.CreateMemberGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMemberGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddMem" +
            "bership", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MembershipData AddMembership(string accountName, MembershipData membershipInfo, string group, Privacy privacy) {
            object[] results = this.Invoke("AddMembership", new object[] {
                        accountName,
                        membershipInfo,
                        group,
                        privacy});
            return ((MembershipData)(results[0]));
        }
        
        /// <remarks/>
        public void AddMembershipAsync(string accountName, MembershipData membershipInfo, string group, Privacy privacy) {
            this.AddMembershipAsync(accountName, membershipInfo, group, privacy, null);
        }
        
        /// <remarks/>
        public void AddMembershipAsync(string accountName, MembershipData membershipInfo, string group, Privacy privacy, object userState) {
            if ((this.AddMembershipOperationCompleted == null)) {
                this.AddMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMembershipOperationCompleted);
            }
            this.InvokeAsync("AddMembership", new object[] {
                        accountName,
                        membershipInfo,
                        group,
                        privacy}, this.AddMembershipOperationCompleted, userState);
        }
        
        private void OnAddMembershipOperationCompleted(object arg) {
            if ((this.AddMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMembershipCompleted(this, new AddMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "Membership", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveMembership(string accountName, System.Guid sourceInternal, string sourceReference) {
            this.Invoke("RemoveMembership", new object[] {
                        accountName,
                        sourceInternal,
                        sourceReference});
        }
        
        /// <remarks/>
        public void RemoveMembershipAsync(string accountName, System.Guid sourceInternal, string sourceReference) {
            this.RemoveMembershipAsync(accountName, sourceInternal, sourceReference, null);
        }
        
        /// <remarks/>
        public void RemoveMembershipAsync(string accountName, System.Guid sourceInternal, string sourceReference, object userState) {
            if ((this.RemoveMembershipOperationCompleted == null)) {
                this.RemoveMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMembershipOperationCompleted);
            }
            this.InvokeAsync("RemoveMembership", new object[] {
                        accountName,
                        sourceInternal,
                        sourceReference}, this.RemoveMembershipOperationCompleted, userState);
        }
        
        private void OnRemoveMembershipOperationCompleted(object arg) {
            if ((this.RemoveMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update" +
            "MembershipPrivacy", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMembershipPrivacy(string accountName, System.Guid sourceInternal, string sourceReference, Privacy newPrivacy) {
            this.Invoke("UpdateMembershipPrivacy", new object[] {
                        accountName,
                        sourceInternal,
                        sourceReference,
                        newPrivacy});
        }
        
        /// <remarks/>
        public void UpdateMembershipPrivacyAsync(string accountName, System.Guid sourceInternal, string sourceReference, Privacy newPrivacy) {
            this.UpdateMembershipPrivacyAsync(accountName, sourceInternal, sourceReference, newPrivacy, null);
        }
        
        /// <remarks/>
        public void UpdateMembershipPrivacyAsync(string accountName, System.Guid sourceInternal, string sourceReference, Privacy newPrivacy, object userState) {
            if ((this.UpdateMembershipPrivacyOperationCompleted == null)) {
                this.UpdateMembershipPrivacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMembershipPrivacyOperationCompleted);
            }
            this.InvokeAsync("UpdateMembershipPrivacy", new object[] {
                        accountName,
                        sourceInternal,
                        sourceReference,
                        newPrivacy}, this.UpdateMembershipPrivacyOperationCompleted, userState);
        }
        
        private void OnUpdateMembershipPrivacyOperationCompleted(object arg) {
            if ((this.UpdateMembershipPrivacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMembershipPrivacyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rMemberships", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MembershipData[] GetUserMemberships(string accountName) {
            object[] results = this.Invoke("GetUserMemberships", new object[] {
                        accountName});
            return ((MembershipData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMembershipsAsync(string accountName) {
            this.GetUserMembershipsAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetUserMembershipsAsync(string accountName, object userState) {
            if ((this.GetUserMembershipsOperationCompleted == null)) {
                this.GetUserMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMembershipsOperationCompleted);
            }
            this.InvokeAsync("GetUserMemberships", new object[] {
                        accountName}, this.GetUserMembershipsOperationCompleted, userState);
        }
        
        private void OnGetUserMembershipsOperationCompleted(object arg) {
            if ((this.GetUserMembershipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMembershipsCompleted(this, new GetUserMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rOrganizations", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationProfileData[] GetUserOrganizations(string accountName) {
            object[] results = this.Invoke("GetUserOrganizations", new object[] {
                        accountName});
            return ((OrganizationProfileData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserOrganizationsAsync(string accountName) {
            this.GetUserOrganizationsAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetUserOrganizationsAsync(string accountName, object userState) {
            if ((this.GetUserOrganizationsOperationCompleted == null)) {
                this.GetUserOrganizationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOrganizationsOperationCompleted);
            }
            this.InvokeAsync("GetUserOrganizations", new object[] {
                        accountName}, this.GetUserOrganizationsOperationCompleted, userState);
        }
        
        private void OnGetUserOrganizationsOperationCompleted(object arg) {
            if ((this.GetUserOrganizationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserOrganizationsCompleted(this, new GetUserOrganizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rColleagues", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactData[] GetUserColleagues(string accountName) {
            object[] results = this.Invoke("GetUserColleagues", new object[] {
                        accountName});
            return ((ContactData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserColleaguesAsync(string accountName) {
            this.GetUserColleaguesAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetUserColleaguesAsync(string accountName, object userState) {
            if ((this.GetUserColleaguesOperationCompleted == null)) {
                this.GetUserColleaguesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserColleaguesOperationCompleted);
            }
            this.InvokeAsync("GetUserColleagues", new object[] {
                        accountName}, this.GetUserColleaguesOperationCompleted, userState);
        }
        
        private void OnGetUserColleaguesOperationCompleted(object arg) {
            if ((this.GetUserColleaguesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserColleaguesCompleted(this, new GetUserColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rLinks", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuickLinkData[] GetUserLinks(string accountName) {
            object[] results = this.Invoke("GetUserLinks", new object[] {
                        accountName});
            return ((QuickLinkData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLinksAsync(string accountName) {
            this.GetUserLinksAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetUserLinksAsync(string accountName, object userState) {
            if ((this.GetUserLinksOperationCompleted == null)) {
                this.GetUserLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLinksOperationCompleted);
            }
            this.InvokeAsync("GetUserLinks", new object[] {
                        accountName}, this.GetUserLinksOperationCompleted, userState);
        }
        
        private void OnGetUserLinksOperationCompleted(object arg) {
            if ((this.GetUserLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLinksCompleted(this, new GetUserLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rPinnedLinks", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PinnedLinkData[] GetUserPinnedLinks(string accountName) {
            object[] results = this.Invoke("GetUserPinnedLinks", new object[] {
                        accountName});
            return ((PinnedLinkData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPinnedLinksAsync(string accountName) {
            this.GetUserPinnedLinksAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetUserPinnedLinksAsync(string accountName, object userState) {
            if ((this.GetUserPinnedLinksOperationCompleted == null)) {
                this.GetUserPinnedLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPinnedLinksOperationCompleted);
            }
            this.InvokeAsync("GetUserPinnedLinks", new object[] {
                        accountName}, this.GetUserPinnedLinksOperationCompleted, userState);
        }
        
        private void OnGetUserPinnedLinksOperationCompleted(object arg) {
            if ((this.GetUserPinnedLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPinnedLinksCompleted(this, new GetUserPinnedLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetInC" +
            "ommon", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InCommonData GetInCommon(string accountName) {
            object[] results = this.Invoke("GetInCommon", new object[] {
                        accountName});
            return ((InCommonData)(results[0]));
        }
        
        /// <remarks/>
        public void GetInCommonAsync(string accountName) {
            this.GetInCommonAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetInCommonAsync(string accountName, object userState) {
            if ((this.GetInCommonOperationCompleted == null)) {
                this.GetInCommonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInCommonOperationCompleted);
            }
            this.InvokeAsync("GetInCommon", new object[] {
                        accountName}, this.GetInCommonOperationCompleted, userState);
        }
        
        private void OnGetInCommonOperationCompleted(object arg) {
            if ((this.GetInCommonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInCommonCompleted(this, new GetInCommonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom" +
            "monManager", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactData GetCommonManager(string accountName) {
            object[] results = this.Invoke("GetCommonManager", new object[] {
                        accountName});
            return ((ContactData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonManagerAsync(string accountName) {
            this.GetCommonManagerAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetCommonManagerAsync(string accountName, object userState) {
            if ((this.GetCommonManagerOperationCompleted == null)) {
                this.GetCommonManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonManagerOperationCompleted);
            }
            this.InvokeAsync("GetCommonManager", new object[] {
                        accountName}, this.GetCommonManagerOperationCompleted, userState);
        }
        
        private void OnGetCommonManagerOperationCompleted(object arg) {
            if ((this.GetCommonManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonManagerCompleted(this, new GetCommonManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom" +
            "monColleagues", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactData[] GetCommonColleagues(string accountName) {
            object[] results = this.Invoke("GetCommonColleagues", new object[] {
                        accountName});
            return ((ContactData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonColleaguesAsync(string accountName) {
            this.GetCommonColleaguesAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetCommonColleaguesAsync(string accountName, object userState) {
            if ((this.GetCommonColleaguesOperationCompleted == null)) {
                this.GetCommonColleaguesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonColleaguesOperationCompleted);
            }
            this.InvokeAsync("GetCommonColleagues", new object[] {
                        accountName}, this.GetCommonColleaguesOperationCompleted, userState);
        }
        
        private void OnGetCommonColleaguesOperationCompleted(object arg) {
            if ((this.GetCommonColleaguesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonColleaguesCompleted(this, new GetCommonColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom" +
            "monMemberships", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MembershipData[] GetCommonMemberships(string accountName) {
            object[] results = this.Invoke("GetCommonMemberships", new object[] {
                        accountName});
            return ((MembershipData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonMembershipsAsync(string accountName) {
            this.GetCommonMembershipsAsync(accountName, null);
        }
        
        /// <remarks/>
        public void GetCommonMembershipsAsync(string accountName, object userState) {
            if ((this.GetCommonMembershipsOperationCompleted == null)) {
                this.GetCommonMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonMembershipsOperationCompleted);
            }
            this.InvokeAsync("GetCommonMemberships", new object[] {
                        accountName}, this.GetCommonMembershipsOperationCompleted, userState);
        }
        
        private void OnGetCommonMembershipsOperationCompleted(object arg) {
            if ((this.GetCommonMembershipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonMembershipsCompleted(this, new GetCommonMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddCol" +
            "league", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactData AddColleague(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup) {
            object[] results = this.Invoke("AddColleague", new object[] {
                        accountName,
                        colleagueAccountName,
                        group,
                        privacy,
                        isInWorkGroup});
            return ((ContactData)(results[0]));
        }
        
        /// <remarks/>
        public void AddColleagueAsync(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup) {
            this.AddColleagueAsync(accountName, colleagueAccountName, group, privacy, isInWorkGroup, null);
        }
        
        /// <remarks/>
        public void AddColleagueAsync(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup, object userState) {
            if ((this.AddColleagueOperationCompleted == null)) {
                this.AddColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddColleagueOperationCompleted);
            }
            this.InvokeAsync("AddColleague", new object[] {
                        accountName,
                        colleagueAccountName,
                        group,
                        privacy,
                        isInWorkGroup}, this.AddColleagueOperationCompleted, userState);
        }
        
        private void OnAddColleagueOperationCompleted(object arg) {
            if ((this.AddColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddColleagueCompleted(this, new AddColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddCol" +
            "leagueWithoutEmailNotification", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactData AddColleagueWithoutEmailNotification(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup) {
            object[] results = this.Invoke("AddColleagueWithoutEmailNotification", new object[] {
                        accountName,
                        colleagueAccountName,
                        group,
                        privacy,
                        isInWorkGroup});
            return ((ContactData)(results[0]));
        }
        
        /// <remarks/>
        public void AddColleagueWithoutEmailNotificationAsync(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup) {
            this.AddColleagueWithoutEmailNotificationAsync(accountName, colleagueAccountName, group, privacy, isInWorkGroup, null);
        }
        
        /// <remarks/>
        public void AddColleagueWithoutEmailNotificationAsync(string accountName, string colleagueAccountName, string group, Privacy privacy, bool isInWorkGroup, object userState) {
            if ((this.AddColleagueWithoutEmailNotificationOperationCompleted == null)) {
                this.AddColleagueWithoutEmailNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddColleagueWithoutEmailNotificationOperationCompleted);
            }
            this.InvokeAsync("AddColleagueWithoutEmailNotification", new object[] {
                        accountName,
                        colleagueAccountName,
                        group,
                        privacy,
                        isInWorkGroup}, this.AddColleagueWithoutEmailNotificationOperationCompleted, userState);
        }
        
        private void OnAddColleagueWithoutEmailNotificationOperationCompleted(object arg) {
            if ((this.AddColleagueWithoutEmailNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddColleagueWithoutEmailNotificationCompleted(this, new AddColleagueWithoutEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "Colleague", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveColleague(string accountName, string colleagueAccountName) {
            this.Invoke("RemoveColleague", new object[] {
                        accountName,
                        colleagueAccountName});
        }
        
        /// <remarks/>
        public void RemoveColleagueAsync(string accountName, string colleagueAccountName) {
            this.RemoveColleagueAsync(accountName, colleagueAccountName, null);
        }
        
        /// <remarks/>
        public void RemoveColleagueAsync(string accountName, string colleagueAccountName, object userState) {
            if ((this.RemoveColleagueOperationCompleted == null)) {
                this.RemoveColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveColleagueOperationCompleted);
            }
            this.InvokeAsync("RemoveColleague", new object[] {
                        accountName,
                        colleagueAccountName}, this.RemoveColleagueOperationCompleted, userState);
        }
        
        private void OnRemoveColleagueOperationCompleted(object arg) {
            if ((this.RemoveColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveColleagueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update" +
            "ColleaguePrivacy", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateColleaguePrivacy(string accountName, string colleagueAccountName, Privacy newPrivacy) {
            this.Invoke("UpdateColleaguePrivacy", new object[] {
                        accountName,
                        colleagueAccountName,
                        newPrivacy});
        }
        
        /// <remarks/>
        public void UpdateColleaguePrivacyAsync(string accountName, string colleagueAccountName, Privacy newPrivacy) {
            this.UpdateColleaguePrivacyAsync(accountName, colleagueAccountName, newPrivacy, null);
        }
        
        /// <remarks/>
        public void UpdateColleaguePrivacyAsync(string accountName, string colleagueAccountName, Privacy newPrivacy, object userState) {
            if ((this.UpdateColleaguePrivacyOperationCompleted == null)) {
                this.UpdateColleaguePrivacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateColleaguePrivacyOperationCompleted);
            }
            this.InvokeAsync("UpdateColleaguePrivacy", new object[] {
                        accountName,
                        colleagueAccountName,
                        newPrivacy}, this.UpdateColleaguePrivacyOperationCompleted, userState);
        }
        
        private void OnUpdateColleaguePrivacyOperationCompleted(object arg) {
            if ((this.UpdateColleaguePrivacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateColleaguePrivacyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddPin" +
            "nedLink", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PinnedLinkData AddPinnedLink(string accountName, string name, string url) {
            object[] results = this.Invoke("AddPinnedLink", new object[] {
                        accountName,
                        name,
                        url});
            return ((PinnedLinkData)(results[0]));
        }
        
        /// <remarks/>
        public void AddPinnedLinkAsync(string accountName, string name, string url) {
            this.AddPinnedLinkAsync(accountName, name, url, null);
        }
        
        /// <remarks/>
        public void AddPinnedLinkAsync(string accountName, string name, string url, object userState) {
            if ((this.AddPinnedLinkOperationCompleted == null)) {
                this.AddPinnedLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPinnedLinkOperationCompleted);
            }
            this.InvokeAsync("AddPinnedLink", new object[] {
                        accountName,
                        name,
                        url}, this.AddPinnedLinkOperationCompleted, userState);
        }
        
        private void OnAddPinnedLinkOperationCompleted(object arg) {
            if ((this.AddPinnedLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPinnedLinkCompleted(this, new AddPinnedLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update" +
            "PinnedLink", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePinnedLink(string accountName, PinnedLinkData data) {
            this.Invoke("UpdatePinnedLink", new object[] {
                        accountName,
                        data});
        }
        
        /// <remarks/>
        public void UpdatePinnedLinkAsync(string accountName, PinnedLinkData data) {
            this.UpdatePinnedLinkAsync(accountName, data, null);
        }
        
        /// <remarks/>
        public void UpdatePinnedLinkAsync(string accountName, PinnedLinkData data, object userState) {
            if ((this.UpdatePinnedLinkOperationCompleted == null)) {
                this.UpdatePinnedLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePinnedLinkOperationCompleted);
            }
            this.InvokeAsync("UpdatePinnedLink", new object[] {
                        accountName,
                        data}, this.UpdatePinnedLinkOperationCompleted, userState);
        }
        
        private void OnUpdatePinnedLinkOperationCompleted(object arg) {
            if ((this.UpdatePinnedLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePinnedLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "PinnedLink", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePinnedLink(string accountName, int id) {
            this.Invoke("RemovePinnedLink", new object[] {
                        accountName,
                        id});
        }
        
        /// <remarks/>
        public void RemovePinnedLinkAsync(string accountName, int id) {
            this.RemovePinnedLinkAsync(accountName, id, null);
        }
        
        /// <remarks/>
        public void RemovePinnedLinkAsync(string accountName, int id, object userState) {
            if ((this.RemovePinnedLinkOperationCompleted == null)) {
                this.RemovePinnedLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePinnedLinkOperationCompleted);
            }
            this.InvokeAsync("RemovePinnedLink", new object[] {
                        accountName,
                        id}, this.RemovePinnedLinkOperationCompleted, userState);
        }
        
        private void OnRemovePinnedLinkOperationCompleted(object arg) {
            if ((this.RemovePinnedLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePinnedLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddLin" +
            "k", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuickLinkData AddLink(string accountName, string name, string url, string group, Privacy privacy) {
            object[] results = this.Invoke("AddLink", new object[] {
                        accountName,
                        name,
                        url,
                        group,
                        privacy});
            return ((QuickLinkData)(results[0]));
        }
        
        /// <remarks/>
        public void AddLinkAsync(string accountName, string name, string url, string group, Privacy privacy) {
            this.AddLinkAsync(accountName, name, url, group, privacy, null);
        }
        
        /// <remarks/>
        public void AddLinkAsync(string accountName, string name, string url, string group, Privacy privacy, object userState) {
            if ((this.AddLinkOperationCompleted == null)) {
                this.AddLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLinkOperationCompleted);
            }
            this.InvokeAsync("AddLink", new object[] {
                        accountName,
                        name,
                        url,
                        group,
                        privacy}, this.AddLinkOperationCompleted, userState);
        }
        
        private void OnAddLinkOperationCompleted(object arg) {
            if ((this.AddLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLinkCompleted(this, new AddLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update" +
            "Link", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLink(string accountName, QuickLinkData data) {
            this.Invoke("UpdateLink", new object[] {
                        accountName,
                        data});
        }
        
        /// <remarks/>
        public void UpdateLinkAsync(string accountName, QuickLinkData data) {
            this.UpdateLinkAsync(accountName, data, null);
        }
        
        /// <remarks/>
        public void UpdateLinkAsync(string accountName, QuickLinkData data, object userState) {
            if ((this.UpdateLinkOperationCompleted == null)) {
                this.UpdateLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLinkOperationCompleted);
            }
            this.InvokeAsync("UpdateLink", new object[] {
                        accountName,
                        data}, this.UpdateLinkOperationCompleted, userState);
        }
        
        private void OnUpdateLinkOperationCompleted(object arg) {
            if ((this.UpdateLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "Link", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveLink(string accountName, int id) {
            this.Invoke("RemoveLink", new object[] {
                        accountName,
                        id});
        }
        
        /// <remarks/>
        public void RemoveLinkAsync(string accountName, int id) {
            this.RemoveLinkAsync(accountName, id, null);
        }
        
        /// <remarks/>
        public void RemoveLinkAsync(string accountName, int id, object userState) {
            if ((this.RemoveLinkOperationCompleted == null)) {
                this.RemoveLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLinkOperationCompleted);
            }
            this.InvokeAsync("RemoveLink", new object[] {
                        accountName,
                        id}, this.RemoveLinkOperationCompleted, userState);
        }
        
        private void OnRemoveLinkOperationCompleted(object arg) {
            if ((this.RemoveLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "AllLinks", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAllLinks(string accountName) {
            this.Invoke("RemoveAllLinks", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void RemoveAllLinksAsync(string accountName) {
            this.RemoveAllLinksAsync(accountName, null);
        }
        
        /// <remarks/>
        public void RemoveAllLinksAsync(string accountName, object userState) {
            if ((this.RemoveAllLinksOperationCompleted == null)) {
                this.RemoveAllLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllLinksOperationCompleted);
            }
            this.InvokeAsync("RemoveAllLinks", new object[] {
                        accountName}, this.RemoveAllLinksOperationCompleted, userState);
        }
        
        private void OnRemoveAllLinksOperationCompleted(object arg) {
            if ((this.RemoveAllLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllLinksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "AllPinnedLinks", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAllPinnedLinks(string accountName) {
            this.Invoke("RemoveAllPinnedLinks", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void RemoveAllPinnedLinksAsync(string accountName) {
            this.RemoveAllPinnedLinksAsync(accountName, null);
        }
        
        /// <remarks/>
        public void RemoveAllPinnedLinksAsync(string accountName, object userState) {
            if ((this.RemoveAllPinnedLinksOperationCompleted == null)) {
                this.RemoveAllPinnedLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllPinnedLinksOperationCompleted);
            }
            this.InvokeAsync("RemoveAllPinnedLinks", new object[] {
                        accountName}, this.RemoveAllPinnedLinksOperationCompleted, userState);
        }
        
        private void OnRemoveAllPinnedLinksOperationCompleted(object arg) {
            if ((this.RemoveAllPinnedLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllPinnedLinksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "AllColleagues", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAllColleagues(string accountName) {
            this.Invoke("RemoveAllColleagues", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void RemoveAllColleaguesAsync(string accountName) {
            this.RemoveAllColleaguesAsync(accountName, null);
        }
        
        /// <remarks/>
        public void RemoveAllColleaguesAsync(string accountName, object userState) {
            if ((this.RemoveAllColleaguesOperationCompleted == null)) {
                this.RemoveAllColleaguesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllColleaguesOperationCompleted);
            }
            this.InvokeAsync("RemoveAllColleagues", new object[] {
                        accountName}, this.RemoveAllColleaguesOperationCompleted, userState);
        }
        
        private void OnRemoveAllColleaguesOperationCompleted(object arg) {
            if ((this.RemoveAllColleaguesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllColleaguesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "AllMemberships", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAllMemberships(string accountName) {
            this.Invoke("RemoveAllMemberships", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void RemoveAllMembershipsAsync(string accountName) {
            this.RemoveAllMembershipsAsync(accountName, null);
        }
        
        /// <remarks/>
        public void RemoveAllMembershipsAsync(string accountName, object userState) {
            if ((this.RemoveAllMembershipsOperationCompleted == null)) {
                this.RemoveAllMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllMembershipsOperationCompleted);
            }
            this.InvokeAsync("RemoveAllMemberships", new object[] {
                        accountName}, this.RemoveAllMembershipsOperationCompleted, userState);
        }
        
        private void OnRemoveAllMembershipsOperationCompleted(object arg) {
            if ((this.RemoveAllMembershipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllMembershipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse" +
            "rProfileCount", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUserProfileCount() {
            object[] results = this.Invoke("GetUserProfileCount", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileCountAsync() {
            this.GetUserProfileCountAsync(null);
        }
        
        /// <remarks/>
        public void GetUserProfileCountAsync(object userState) {
            if ((this.GetUserProfileCountOperationCompleted == null)) {
                this.GetUserProfileCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileCountOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileCount", new object[0], this.GetUserProfileCountOperationCompleted, userState);
        }
        
        private void OnGetUserProfileCountOperationCompleted(object arg) {
            if ((this.GetUserProfileCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileCountCompleted(this, new GetUserProfileCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddSug" +
            "gestions", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSuggestions(SuggestionType type, string[] suggestions, double[] weights) {
            this.Invoke("AddSuggestions", new object[] {
                        type,
                        suggestions,
                        weights});
        }
        
        /// <remarks/>
        public void AddSuggestionsAsync(SuggestionType type, string[] suggestions, double[] weights) {
            this.AddSuggestionsAsync(type, suggestions, weights, null);
        }
        
        /// <remarks/>
        public void AddSuggestionsAsync(SuggestionType type, string[] suggestions, double[] weights, object userState) {
            if ((this.AddSuggestionsOperationCompleted == null)) {
                this.AddSuggestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSuggestionsOperationCompleted);
            }
            this.InvokeAsync("AddSuggestions", new object[] {
                        type,
                        suggestions,
                        weights}, this.AddSuggestionsOperationCompleted, userState);
        }
        
        private void OnAddSuggestionsOperationCompleted(object arg) {
            if ((this.AddSuggestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSuggestionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro" +
            "fileSchemaNames", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProfileSchemaNames() {
            object[] results = this.Invoke("GetProfileSchemaNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileSchemaNamesAsync() {
            this.GetProfileSchemaNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetProfileSchemaNamesAsync(object userState) {
            if ((this.GetProfileSchemaNamesOperationCompleted == null)) {
                this.GetProfileSchemaNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileSchemaNamesOperationCompleted);
            }
            this.InvokeAsync("GetProfileSchemaNames", new object[0], this.GetProfileSchemaNamesOperationCompleted, userState);
        }
        
        private void OnGetProfileSchemaNamesOperationCompleted(object arg) {
            if ((this.GetProfileSchemaNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileSchemaNamesCompleted(this, new GetProfileSchemaNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro" +
            "fileSchema", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyInfo[] GetProfileSchema(string schemaName) {
            object[] results = this.Invoke("GetProfileSchema", new object[] {
                        schemaName});
            return ((PropertyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileSchemaAsync(string schemaName) {
            this.GetProfileSchemaAsync(schemaName, null);
        }
        
        /// <remarks/>
        public void GetProfileSchemaAsync(string schemaName, object userState) {
            if ((this.GetProfileSchemaOperationCompleted == null)) {
                this.GetProfileSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileSchemaOperationCompleted);
            }
            this.InvokeAsync("GetProfileSchema", new object[] {
                        schemaName}, this.GetProfileSchemaOperationCompleted, userState);
        }
        
        private void OnGetProfileSchemaOperationCompleted(object arg) {
            if ((this.GetProfileSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileSchemaCompleted(this, new GetProfileSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetLea" +
            "ders", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Leader[] GetLeaders() {
            object[] results = this.Invoke("GetLeaders", new object[0]);
            return ((Leader[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeadersAsync() {
            this.GetLeadersAsync(null);
        }
        
        /// <remarks/>
        public void GetLeadersAsync(object userState) {
            if ((this.GetLeadersOperationCompleted == null)) {
                this.GetLeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeadersOperationCompleted);
            }
            this.InvokeAsync("GetLeaders", new object[0], this.GetLeadersOperationCompleted, userState);
        }
        
        private void OnGetLeadersOperationCompleted(object arg) {
            if ((this.GetLeadersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeadersCompleted(this, new GetLeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddLea" +
            "der", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddLeader(string accountName) {
            this.Invoke("AddLeader", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void AddLeaderAsync(string accountName) {
            this.AddLeaderAsync(accountName, null);
        }
        
        /// <remarks/>
        public void AddLeaderAsync(string accountName, object userState) {
            if ((this.AddLeaderOperationCompleted == null)) {
                this.AddLeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLeaderOperationCompleted);
            }
            this.InvokeAsync("AddLeader", new object[] {
                        accountName}, this.AddLeaderOperationCompleted, userState);
        }
        
        private void OnAddLeaderOperationCompleted(object arg) {
            if ((this.AddLeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove" +
            "Leader", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveLeader(string accountName) {
            this.Invoke("RemoveLeader", new object[] {
                        accountName});
        }
        
        /// <remarks/>
        public void RemoveLeaderAsync(string accountName) {
            this.RemoveLeaderAsync(accountName, null);
        }
        
        /// <remarks/>
        public void RemoveLeaderAsync(string accountName, object userState) {
            if ((this.RemoveLeaderOperationCompleted == null)) {
                this.RemoveLeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLeaderOperationCompleted);
            }
            this.InvokeAsync("RemoveLeader", new object[] {
                        accountName}, this.RemoveLeaderOperationCompleted, userState);
        }
        
        private void OnRemoveLeaderOperationCompleted(object arg) {
            if ((this.RemoveLeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class GetUserProfileByIndexResult {
        
        private string nextValueField;
        
        private PropertyData[] userProfileField;
        
        private ContactData[] colleaguesField;
        
        private QuickLinkData[] quickLinksField;
        
        private PinnedLinkData[] pinnedLinksField;
        
        private MembershipData[] membershipsField;
        
        /// <remarks/>
        public string NextValue {
            get {
                return this.nextValueField;
            }
            set {
                this.nextValueField = value;
            }
        }
        
        /// <remarks/>
        public PropertyData[] UserProfile {
            get {
                return this.userProfileField;
            }
            set {
                this.userProfileField = value;
            }
        }
        
        /// <remarks/>
        public ContactData[] Colleagues {
            get {
                return this.colleaguesField;
            }
            set {
                this.colleaguesField = value;
            }
        }
        
        /// <remarks/>
        public QuickLinkData[] QuickLinks {
            get {
                return this.quickLinksField;
            }
            set {
                this.quickLinksField = value;
            }
        }
        
        /// <remarks/>
        public PinnedLinkData[] PinnedLinks {
            get {
                return this.pinnedLinksField;
            }
            set {
                this.pinnedLinksField = value;
            }
        }
        
        /// <remarks/>
        public MembershipData[] Memberships {
            get {
                return this.membershipsField;
            }
            set {
                this.membershipsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class PropertyData {
        
        private bool isPrivacyChangedField;
        
        private bool isValueChangedField;
        
        private string nameField;
        
        private Privacy privacyField;
        
        private ValueData[] valuesField;
        
        /// <remarks/>
        public bool IsPrivacyChanged {
            get {
                return this.isPrivacyChangedField;
            }
            set {
                this.isPrivacyChangedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValueChanged {
            get {
                return this.isValueChangedField;
            }
            set {
                this.isValueChangedField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Privacy Privacy {
            get {
                return this.privacyField;
            }
            set {
                this.privacyField = value;
            }
        }
        
        /// <remarks/>
        public ValueData[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public enum Privacy {
        
        /// <remarks/>
        Public,
        
        /// <remarks/>
        Contacts,
        
        /// <remarks/>
        Organization,
        
        /// <remarks/>
        Manager,
        
        /// <remarks/>
        Private,
        
        /// <remarks/>
        NotSet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class ValueData {
        
        private object valueField;
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class Leader {
        
        private string accountNameField;
        
        private bool validField;
        
        private string managerAccountNameField;
        
        private int reportCountField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ManagerAccountName {
            get {
                return this.managerAccountNameField;
            }
            set {
                this.managerAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public int ReportCount {
            get {
                return this.reportCountField;
            }
            set {
                this.reportCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class InCommonData {
        
        private ContactData managerField;
        
        private ContactData[] colleaguesField;
        
        private MembershipData[] membershipsField;
        
        /// <remarks/>
        public ContactData Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public ContactData[] Colleagues {
            get {
                return this.colleaguesField;
            }
            set {
                this.colleaguesField = value;
            }
        }
        
        /// <remarks/>
        public MembershipData[] Memberships {
            get {
                return this.membershipsField;
            }
            set {
                this.membershipsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class ContactData {
        
        private string accountNameField;
        
        private Privacy privacyField;
        
        private string nameField;
        
        private bool isInWorkGroupField;
        
        private string groupField;
        
        private string emailField;
        
        private string titleField;
        
        private string urlField;
        
        private System.Guid userProfileIDField;
        
        private long idField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public Privacy Privacy {
            get {
                return this.privacyField;
            }
            set {
                this.privacyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInWorkGroup {
            get {
                return this.isInWorkGroupField;
            }
            set {
                this.isInWorkGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserProfileID {
            get {
                return this.userProfileIDField;
            }
            set {
                this.userProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class MembershipData {
        
        private MembershipSource sourceField;
        
        private MemberGroupData memberGroupField;
        
        private string groupField;
        
        private string displayNameField;
        
        private Privacy privacyField;
        
        private string mailNicknameField;
        
        private string urlField;
        
        private long idField;
        
        private long memberGroupIDField;
        
        /// <remarks/>
        public MembershipSource Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public MemberGroupData MemberGroup {
            get {
                return this.memberGroupField;
            }
            set {
                this.memberGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public Privacy Privacy {
            get {
                return this.privacyField;
            }
            set {
                this.privacyField = value;
            }
        }
        
        /// <remarks/>
        public string MailNickname {
            get {
                return this.mailNicknameField;
            }
            set {
                this.mailNicknameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long MemberGroupID {
            get {
                return this.memberGroupIDField;
            }
            set {
                this.memberGroupIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public enum MembershipSource {
        
        /// <remarks/>
        DistributionList,
        
        /// <remarks/>
        SharePointSite,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class MemberGroupData {
        
        private System.Guid sourceInternalField;
        
        private string sourceReferenceField;
        
        /// <remarks/>
        public System.Guid SourceInternal {
            get {
                return this.sourceInternalField;
            }
            set {
                this.sourceInternalField = value;
            }
        }
        
        /// <remarks/>
        public string SourceReference {
            get {
                return this.sourceReferenceField;
            }
            set {
                this.sourceReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class OrganizationProfileData {
        
        private string displayNameField;
        
        private long recordIDField;
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public long RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class PropertyInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private int displayOrderField;
        
        private int maximumShownField;
        
        private bool isAdminEditableField;
        
        private bool isSearchableField;
        
        private bool isSystemField;
        
        private string managedPropertyNameField;
        
        private string displayNameField;
        
        private string typeField;
        
        private bool allowPolicyOverrideField;
        
        private Privacy defaultPrivacyField;
        
        private bool isAliasField;
        
        private bool isColleagueEventLogField;
        
        private bool isRequiredField;
        
        private bool isUserEditableField;
        
        private bool isVisibleOnEditorField;
        
        private bool isVisibleOnViewerField;
        
        private bool isReplicableField;
        
        private bool userOverridePrivacyField;
        
        private int lengthField;
        
        private bool isImportedField;
        
        private bool isMultiValueField;
        
        private ChoiceTypes choiceTypeField;
        
        private System.Nullable<System.Guid> termSetIdField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        public int MaximumShown {
            get {
                return this.maximumShownField;
            }
            set {
                this.maximumShownField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdminEditable {
            get {
                return this.isAdminEditableField;
            }
            set {
                this.isAdminEditableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSearchable {
            get {
                return this.isSearchableField;
            }
            set {
                this.isSearchableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSystem {
            get {
                return this.isSystemField;
            }
            set {
                this.isSystemField = value;
            }
        }
        
        /// <remarks/>
        public string ManagedPropertyName {
            get {
                return this.managedPropertyNameField;
            }
            set {
                this.managedPropertyNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowPolicyOverride {
            get {
                return this.allowPolicyOverrideField;
            }
            set {
                this.allowPolicyOverrideField = value;
            }
        }
        
        /// <remarks/>
        public Privacy DefaultPrivacy {
            get {
                return this.defaultPrivacyField;
            }
            set {
                this.defaultPrivacyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAlias {
            get {
                return this.isAliasField;
            }
            set {
                this.isAliasField = value;
            }
        }
        
        /// <remarks/>
        public bool IsColleagueEventLog {
            get {
                return this.isColleagueEventLogField;
            }
            set {
                this.isColleagueEventLogField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserEditable {
            get {
                return this.isUserEditableField;
            }
            set {
                this.isUserEditableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVisibleOnEditor {
            get {
                return this.isVisibleOnEditorField;
            }
            set {
                this.isVisibleOnEditorField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVisibleOnViewer {
            get {
                return this.isVisibleOnViewerField;
            }
            set {
                this.isVisibleOnViewerField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReplicable {
            get {
                return this.isReplicableField;
            }
            set {
                this.isReplicableField = value;
            }
        }
        
        /// <remarks/>
        public bool UserOverridePrivacy {
            get {
                return this.userOverridePrivacyField;
            }
            set {
                this.userOverridePrivacyField = value;
            }
        }
        
        /// <remarks/>
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public bool IsImported {
            get {
                return this.isImportedField;
            }
            set {
                this.isImportedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMultiValue {
            get {
                return this.isMultiValueField;
            }
            set {
                this.isMultiValueField = value;
            }
        }
        
        /// <remarks/>
        public ChoiceTypes ChoiceType {
            get {
                return this.choiceTypeField;
            }
            set {
                this.choiceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> TermSetId {
            get {
                return this.termSetIdField;
            }
            set {
                this.termSetIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public enum ChoiceTypes {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class SPTimeZone {
        
        private ushort idField;
        
        /// <remarks/>
        public ushort ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class PinnedLinkData {
        
        private string nameField;
        
        private string urlField;
        
        private long idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public partial class QuickLinkData {
        
        private string nameField;
        
        private string groupField;
        
        private Privacy privacyField;
        
        private string urlField;
        
        private long idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public Privacy Privacy {
            get {
                return this.privacyField;
            }
            set {
                this.privacyField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")]
    public enum SuggestionType {
        
        /// <remarks/>
        Colleague,
        
        /// <remarks/>
        Keyword,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserProfileByIndexCompletedEventHandler(object sender, GetUserProfileByIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileByIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileByIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserProfileByIndexResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserProfileByIndexResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateUserProfileByAccountNameCompletedEventHandler(object sender, CreateUserProfileByAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserProfileByAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserProfileByAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserProfileByNameCompletedEventHandler(object sender, GetUserProfileByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserProfileByGuidCompletedEventHandler(object sender, GetUserProfileByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserProfileSchemaCompletedEventHandler(object sender, GetUserProfileSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProfileSchemaNameByAccountNameCompletedEventHandler(object sender, GetProfileSchemaNameByAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileSchemaNameByAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileSchemaNameByAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPropertyChoiceListCompletedEventHandler(object sender, GetPropertyChoiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyChoiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyChoiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ModifyUserPropertyByAccountNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserPropertyByAccountNameCompletedEventHandler(object sender, GetUserPropertyByAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPropertyByAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPropertyByAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateMemberGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddMembershipCompletedEventHandler(object sender, AddMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MembershipData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MembershipData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveMembershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateMembershipPrivacyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserMembershipsCompletedEventHandler(object sender, GetUserMembershipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MembershipData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MembershipData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserOrganizationsCompletedEventHandler(object sender, GetUserOrganizationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserOrganizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserOrganizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationProfileData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationProfileData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserColleaguesCompletedEventHandler(object sender, GetUserColleaguesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserColleaguesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserColleaguesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserLinksCompletedEventHandler(object sender, GetUserLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickLinkData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickLinkData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserPinnedLinksCompletedEventHandler(object sender, GetUserPinnedLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPinnedLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPinnedLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PinnedLinkData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PinnedLinkData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetInCommonCompletedEventHandler(object sender, GetInCommonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInCommonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInCommonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InCommonData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InCommonData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCommonManagerCompletedEventHandler(object sender, GetCommonManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCommonColleaguesCompletedEventHandler(object sender, GetCommonColleaguesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonColleaguesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonColleaguesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCommonMembershipsCompletedEventHandler(object sender, GetCommonMembershipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MembershipData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MembershipData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddColleagueCompletedEventHandler(object sender, AddColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddColleagueWithoutEmailNotificationCompletedEventHandler(object sender, AddColleagueWithoutEmailNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddColleagueWithoutEmailNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddColleagueWithoutEmailNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveColleagueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateColleaguePrivacyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddPinnedLinkCompletedEventHandler(object sender, AddPinnedLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPinnedLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPinnedLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PinnedLinkData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PinnedLinkData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdatePinnedLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemovePinnedLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddLinkCompletedEventHandler(object sender, AddLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickLinkData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickLinkData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveAllLinksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveAllPinnedLinksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveAllColleaguesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveAllMembershipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserProfileCountCompletedEventHandler(object sender, GetUserProfileCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddSuggestionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProfileSchemaNamesCompletedEventHandler(object sender, GetProfileSchemaNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileSchemaNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileSchemaNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProfileSchemaCompletedEventHandler(object sender, GetProfileSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLeadersCompletedEventHandler(object sender, GetLeadersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Leader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Leader[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddLeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveLeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591