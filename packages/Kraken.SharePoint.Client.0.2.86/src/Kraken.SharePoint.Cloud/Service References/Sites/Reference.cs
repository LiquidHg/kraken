//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kraken.SharePoint.Cloud.Sites {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="Sites.SitesSoap")]
    public interface SitesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSite(string SiteUrl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetSite", ReplyAction="*")]
        System.IAsyncResult BeginGetSite(string SiteUrl, System.AsyncCallback callback, object asyncState);
        
        string EndGetSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetSiteTemplates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        uint GetSiteTemplates(out Kraken.SharePoint.Cloud.Sites.Template[] TemplateList, uint LCID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetSiteTemplates", ReplyAction="*")]
        System.IAsyncResult BeginGetSiteTemplates(uint LCID, System.AsyncCallback callback, object asyncState);
        
        uint EndGetSiteTemplates(out Kraken.SharePoint.Cloud.Sites.Template[] TemplateList, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUpdatedFormDigest();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest", ReplyAction="*")]
        System.IAsyncResult BeginGetUpdatedFormDigest(System.AsyncCallback callback, object asyncState);
        
        string EndGetUpdatedFormDigest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Kraken.SharePoint.Cloud.Sites.FormDigestInformation GetUpdatedFormDigestInformation(string url);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetUpdatedFormDigestInformation(string url, System.AsyncCallback callback, object asyncState);
        
        Kraken.SharePoint.Cloud.Sites.FormDigestInformation EndGetUpdatedFormDigestInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ExportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ExportWeb", ReplyAction="*")]
        System.IAsyncResult BeginExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, System.AsyncCallback callback, object asyncState);
        
        int EndExportWeb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ImportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ImportWeb", ReplyAction="*")]
        System.IAsyncResult BeginImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, System.AsyncCallback callback, object asyncState);
        
        int EndImportWeb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ExportSolution", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExportSolution(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ExportSolution", ReplyAction="*")]
        System.IAsyncResult BeginExportSolution(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent, System.AsyncCallback callback, object asyncState);
        
        string EndExportSolution(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/CreateWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateWeb(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/CreateWeb", ReplyAction="*")]
        System.IAsyncResult BeginCreateWeb(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence, System.AsyncCallback callback, object asyncState);
        
        string EndCreateWeb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/DeleteWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteWeb(string url);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/DeleteWeb", ReplyAction="*")]
        System.IAsyncResult BeginDeleteWeb(string url, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteWeb(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Template : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private string nameField;
        
        private bool isUniqueField;
        
        private bool isHiddenField;
        
        private string descriptionField;
        
        private string imageUrlField;
        
        private bool isCustomField;
        
        private bool isSubWebOnlyField;
        
        private bool isRootWebOnlyField;
        
        private string displayCategoryField;
        
        private string filterCategoriesField;
        
        private bool hasProvisionClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
                this.RaisePropertyChanged("IsUnique");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
                this.RaisePropertyChanged("IsHidden");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
                this.RaisePropertyChanged("ImageUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsCustom {
            get {
                return this.isCustomField;
            }
            set {
                this.isCustomField = value;
                this.RaisePropertyChanged("IsCustom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsSubWebOnly {
            get {
                return this.isSubWebOnlyField;
            }
            set {
                this.isSubWebOnlyField = value;
                this.RaisePropertyChanged("IsSubWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsRootWebOnly {
            get {
                return this.isRootWebOnlyField;
            }
            set {
                this.isRootWebOnlyField = value;
                this.RaisePropertyChanged("IsRootWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DisplayCategory {
            get {
                return this.displayCategoryField;
            }
            set {
                this.displayCategoryField = value;
                this.RaisePropertyChanged("DisplayCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilterCategories {
            get {
                return this.filterCategoriesField;
            }
            set {
                this.filterCategoriesField = value;
                this.RaisePropertyChanged("FilterCategories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasProvisionClass {
            get {
                return this.hasProvisionClassField;
            }
            set {
                this.hasProvisionClassField = value;
                this.RaisePropertyChanged("HasProvisionClass");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class FormDigestInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string digestValueField;
        
        private int timeoutSecondsField;
        
        private string webFullUrlField;
        
        private string libraryVersionField;
        
        private string supportedSchemaVersionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DigestValue {
            get {
                return this.digestValueField;
            }
            set {
                this.digestValueField = value;
                this.RaisePropertyChanged("DigestValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TimeoutSeconds {
            get {
                return this.timeoutSecondsField;
            }
            set {
                this.timeoutSecondsField = value;
                this.RaisePropertyChanged("TimeoutSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string WebFullUrl {
            get {
                return this.webFullUrlField;
            }
            set {
                this.webFullUrlField = value;
                this.RaisePropertyChanged("WebFullUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LibraryVersion {
            get {
                return this.libraryVersionField;
            }
            set {
                this.libraryVersionField = value;
                this.RaisePropertyChanged("LibraryVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string SupportedSchemaVersions {
            get {
                return this.supportedSchemaVersionsField;
            }
            set {
                this.supportedSchemaVersionsField = value;
                this.RaisePropertyChanged("SupportedSchemaVersions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SitesSoapChannel : Kraken.SharePoint.Cloud.Sites.SitesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Kraken.SharePoint.Cloud.Sites.Template[] TemplateList {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Kraken.SharePoint.Cloud.Sites.Template[])(this.results[0]));
            }
        }
        
        public uint Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((uint)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpdatedFormDigestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdatedFormDigestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpdatedFormDigestInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdatedFormDigestInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Kraken.SharePoint.Cloud.Sites.FormDigestInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Kraken.SharePoint.Cloud.Sites.FormDigestInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportSolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportSolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SitesSoapClient : System.ServiceModel.ClientBase<Kraken.SharePoint.Cloud.Sites.SitesSoap>, Kraken.SharePoint.Cloud.Sites.SitesSoap {
        
        private BeginOperationDelegate onBeginGetSiteDelegate;
        
        private EndOperationDelegate onEndGetSiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSiteTemplatesDelegate;
        
        private EndOperationDelegate onEndGetSiteTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdatedFormDigestDelegate;
        
        private EndOperationDelegate onEndGetUpdatedFormDigestDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdatedFormDigestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdatedFormDigestInformationDelegate;
        
        private EndOperationDelegate onEndGetUpdatedFormDigestInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdatedFormDigestInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportWebDelegate;
        
        private EndOperationDelegate onEndExportWebDelegate;
        
        private System.Threading.SendOrPostCallback onExportWebCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportWebDelegate;
        
        private EndOperationDelegate onEndImportWebDelegate;
        
        private System.Threading.SendOrPostCallback onImportWebCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportSolutionDelegate;
        
        private EndOperationDelegate onEndExportSolutionDelegate;
        
        private System.Threading.SendOrPostCallback onExportSolutionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateWebDelegate;
        
        private EndOperationDelegate onEndCreateWebDelegate;
        
        private System.Threading.SendOrPostCallback onCreateWebCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteWebDelegate;
        
        private EndOperationDelegate onEndDeleteWebDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteWebCompletedDelegate;
        
        public SitesSoapClient() {
        }
        
        public SitesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSiteCompletedEventArgs> GetSiteCompleted;
        
        public event System.EventHandler<GetSiteTemplatesCompletedEventArgs> GetSiteTemplatesCompleted;
        
        public event System.EventHandler<GetUpdatedFormDigestCompletedEventArgs> GetUpdatedFormDigestCompleted;
        
        public event System.EventHandler<GetUpdatedFormDigestInformationCompletedEventArgs> GetUpdatedFormDigestInformationCompleted;
        
        public event System.EventHandler<ExportWebCompletedEventArgs> ExportWebCompleted;
        
        public event System.EventHandler<ImportWebCompletedEventArgs> ImportWebCompleted;
        
        public event System.EventHandler<ExportSolutionCompletedEventArgs> ExportSolutionCompleted;
        
        public event System.EventHandler<CreateWebCompletedEventArgs> CreateWebCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteWebCompleted;
        
        public string GetSite(string SiteUrl) {
            return base.Channel.GetSite(SiteUrl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSite(string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSite(SiteUrl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSite(System.IAsyncResult result) {
            return base.Channel.EndGetSite(result);
        }
        
        private System.IAsyncResult OnBeginGetSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SiteUrl = ((string)(inValues[0]));
            return this.BeginGetSite(SiteUrl, callback, asyncState);
        }
        
        private object[] OnEndGetSite(System.IAsyncResult result) {
            string retVal = this.EndGetSite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSiteCompleted(object state) {
            if ((this.GetSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteAsync(string SiteUrl) {
            this.GetSiteAsync(SiteUrl, null);
        }
        
        public void GetSiteAsync(string SiteUrl, object userState) {
            if ((this.onBeginGetSiteDelegate == null)) {
                this.onBeginGetSiteDelegate = new BeginOperationDelegate(this.OnBeginGetSite);
            }
            if ((this.onEndGetSiteDelegate == null)) {
                this.onEndGetSiteDelegate = new EndOperationDelegate(this.OnEndGetSite);
            }
            if ((this.onGetSiteCompletedDelegate == null)) {
                this.onGetSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteDelegate, new object[] {
                        SiteUrl}, this.onEndGetSiteDelegate, this.onGetSiteCompletedDelegate, userState);
        }
        
        public uint GetSiteTemplates(out Kraken.SharePoint.Cloud.Sites.Template[] TemplateList, uint LCID) {
            return base.Channel.GetSiteTemplates(out TemplateList, LCID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSiteTemplates(uint LCID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSiteTemplates(LCID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public uint EndGetSiteTemplates(out Kraken.SharePoint.Cloud.Sites.Template[] TemplateList, System.IAsyncResult result) {
            return base.Channel.EndGetSiteTemplates(out TemplateList, result);
        }
        
        private System.IAsyncResult OnBeginGetSiteTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            uint LCID = ((uint)(inValues[0]));
            return this.BeginGetSiteTemplates(LCID, callback, asyncState);
        }
        
        private object[] OnEndGetSiteTemplates(System.IAsyncResult result) {
            Kraken.SharePoint.Cloud.Sites.Template[] TemplateList = this.GetDefaultValueForInitialization<Kraken.SharePoint.Cloud.Sites.Template[]>();
            uint retVal = this.EndGetSiteTemplates(out TemplateList, result);
            return new object[] {
                    TemplateList,
                    retVal};
        }
        
        private void OnGetSiteTemplatesCompleted(object state) {
            if ((this.GetSiteTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteTemplatesCompleted(this, new GetSiteTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteTemplatesAsync(uint LCID) {
            this.GetSiteTemplatesAsync(LCID, null);
        }
        
        public void GetSiteTemplatesAsync(uint LCID, object userState) {
            if ((this.onBeginGetSiteTemplatesDelegate == null)) {
                this.onBeginGetSiteTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetSiteTemplates);
            }
            if ((this.onEndGetSiteTemplatesDelegate == null)) {
                this.onEndGetSiteTemplatesDelegate = new EndOperationDelegate(this.OnEndGetSiteTemplates);
            }
            if ((this.onGetSiteTemplatesCompletedDelegate == null)) {
                this.onGetSiteTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteTemplatesDelegate, new object[] {
                        LCID}, this.onEndGetSiteTemplatesDelegate, this.onGetSiteTemplatesCompletedDelegate, userState);
        }
        
        public string GetUpdatedFormDigest() {
            return base.Channel.GetUpdatedFormDigest();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUpdatedFormDigest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdatedFormDigest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUpdatedFormDigest(System.IAsyncResult result) {
            return base.Channel.EndGetUpdatedFormDigest(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdatedFormDigest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUpdatedFormDigest(callback, asyncState);
        }
        
        private object[] OnEndGetUpdatedFormDigest(System.IAsyncResult result) {
            string retVal = this.EndGetUpdatedFormDigest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdatedFormDigestCompleted(object state) {
            if ((this.GetUpdatedFormDigestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdatedFormDigestCompleted(this, new GetUpdatedFormDigestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdatedFormDigestAsync() {
            this.GetUpdatedFormDigestAsync(null);
        }
        
        public void GetUpdatedFormDigestAsync(object userState) {
            if ((this.onBeginGetUpdatedFormDigestDelegate == null)) {
                this.onBeginGetUpdatedFormDigestDelegate = new BeginOperationDelegate(this.OnBeginGetUpdatedFormDigest);
            }
            if ((this.onEndGetUpdatedFormDigestDelegate == null)) {
                this.onEndGetUpdatedFormDigestDelegate = new EndOperationDelegate(this.OnEndGetUpdatedFormDigest);
            }
            if ((this.onGetUpdatedFormDigestCompletedDelegate == null)) {
                this.onGetUpdatedFormDigestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdatedFormDigestCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdatedFormDigestDelegate, null, this.onEndGetUpdatedFormDigestDelegate, this.onGetUpdatedFormDigestCompletedDelegate, userState);
        }
        
        public Kraken.SharePoint.Cloud.Sites.FormDigestInformation GetUpdatedFormDigestInformation(string url) {
            return base.Channel.GetUpdatedFormDigestInformation(url);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUpdatedFormDigestInformation(string url, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdatedFormDigestInformation(url, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Kraken.SharePoint.Cloud.Sites.FormDigestInformation EndGetUpdatedFormDigestInformation(System.IAsyncResult result) {
            return base.Channel.EndGetUpdatedFormDigestInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdatedFormDigestInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            return this.BeginGetUpdatedFormDigestInformation(url, callback, asyncState);
        }
        
        private object[] OnEndGetUpdatedFormDigestInformation(System.IAsyncResult result) {
            Kraken.SharePoint.Cloud.Sites.FormDigestInformation retVal = this.EndGetUpdatedFormDigestInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdatedFormDigestInformationCompleted(object state) {
            if ((this.GetUpdatedFormDigestInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdatedFormDigestInformationCompleted(this, new GetUpdatedFormDigestInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdatedFormDigestInformationAsync(string url) {
            this.GetUpdatedFormDigestInformationAsync(url, null);
        }
        
        public void GetUpdatedFormDigestInformationAsync(string url, object userState) {
            if ((this.onBeginGetUpdatedFormDigestInformationDelegate == null)) {
                this.onBeginGetUpdatedFormDigestInformationDelegate = new BeginOperationDelegate(this.OnBeginGetUpdatedFormDigestInformation);
            }
            if ((this.onEndGetUpdatedFormDigestInformationDelegate == null)) {
                this.onEndGetUpdatedFormDigestInformationDelegate = new EndOperationDelegate(this.OnEndGetUpdatedFormDigestInformation);
            }
            if ((this.onGetUpdatedFormDigestInformationCompletedDelegate == null)) {
                this.onGetUpdatedFormDigestInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdatedFormDigestInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdatedFormDigestInformationDelegate, new object[] {
                        url}, this.onEndGetUpdatedFormDigestInformationDelegate, this.onGetUpdatedFormDigestInformationCompletedDelegate, userState);
        }
        
        public int ExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            return base.Channel.ExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndExportWeb(System.IAsyncResult result) {
            return base.Channel.EndExportWeb(result);
        }
        
        private System.IAsyncResult OnBeginExportWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            string webUrl = ((string)(inValues[1]));
            string dataPath = ((string)(inValues[2]));
            bool includeSubwebs = ((bool)(inValues[3]));
            bool includeUserSecurity = ((bool)(inValues[4]));
            bool overWrite = ((bool)(inValues[5]));
            int cabSize = ((int)(inValues[6]));
            return this.BeginExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, callback, asyncState);
        }
        
        private object[] OnEndExportWeb(System.IAsyncResult result) {
            int retVal = this.EndExportWeb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportWebCompleted(object state) {
            if ((this.ExportWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportWebCompleted(this, new ExportWebCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            this.ExportWebAsync(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, null);
        }
        
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, object userState) {
            if ((this.onBeginExportWebDelegate == null)) {
                this.onBeginExportWebDelegate = new BeginOperationDelegate(this.OnBeginExportWeb);
            }
            if ((this.onEndExportWebDelegate == null)) {
                this.onEndExportWebDelegate = new EndOperationDelegate(this.OnEndExportWeb);
            }
            if ((this.onExportWebCompletedDelegate == null)) {
                this.onExportWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportWebCompleted);
            }
            base.InvokeAsync(this.onBeginExportWebDelegate, new object[] {
                        jobName,
                        webUrl,
                        dataPath,
                        includeSubwebs,
                        includeUserSecurity,
                        overWrite,
                        cabSize}, this.onEndExportWebDelegate, this.onExportWebCompletedDelegate, userState);
        }
        
        public int ImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            return base.Channel.ImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndImportWeb(System.IAsyncResult result) {
            return base.Channel.EndImportWeb(result);
        }
        
        private System.IAsyncResult OnBeginImportWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            string webUrl = ((string)(inValues[1]));
            string[] dataFiles = ((string[])(inValues[2]));
            string logPath = ((string)(inValues[3]));
            bool includeUserSecurity = ((bool)(inValues[4]));
            bool overWrite = ((bool)(inValues[5]));
            return this.BeginImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, callback, asyncState);
        }
        
        private object[] OnEndImportWeb(System.IAsyncResult result) {
            int retVal = this.EndImportWeb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportWebCompleted(object state) {
            if ((this.ImportWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportWebCompleted(this, new ImportWebCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            this.ImportWebAsync(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, null);
        }
        
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, object userState) {
            if ((this.onBeginImportWebDelegate == null)) {
                this.onBeginImportWebDelegate = new BeginOperationDelegate(this.OnBeginImportWeb);
            }
            if ((this.onEndImportWebDelegate == null)) {
                this.onEndImportWebDelegate = new EndOperationDelegate(this.OnEndImportWeb);
            }
            if ((this.onImportWebCompletedDelegate == null)) {
                this.onImportWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportWebCompleted);
            }
            base.InvokeAsync(this.onBeginImportWebDelegate, new object[] {
                        jobName,
                        webUrl,
                        dataFiles,
                        logPath,
                        includeUserSecurity,
                        overWrite}, this.onEndImportWebDelegate, this.onImportWebCompletedDelegate, userState);
        }
        
        public string ExportSolution(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent) {
            return base.Channel.ExportSolution(solutionFileName, title, description, fullReuseExportMode, includeWebContent);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportSolution(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportSolution(solutionFileName, title, description, fullReuseExportMode, includeWebContent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndExportSolution(System.IAsyncResult result) {
            return base.Channel.EndExportSolution(result);
        }
        
        private System.IAsyncResult OnBeginExportSolution(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string solutionFileName = ((string)(inValues[0]));
            string title = ((string)(inValues[1]));
            string description = ((string)(inValues[2]));
            bool fullReuseExportMode = ((bool)(inValues[3]));
            bool includeWebContent = ((bool)(inValues[4]));
            return this.BeginExportSolution(solutionFileName, title, description, fullReuseExportMode, includeWebContent, callback, asyncState);
        }
        
        private object[] OnEndExportSolution(System.IAsyncResult result) {
            string retVal = this.EndExportSolution(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportSolutionCompleted(object state) {
            if ((this.ExportSolutionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportSolutionCompleted(this, new ExportSolutionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportSolutionAsync(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent) {
            this.ExportSolutionAsync(solutionFileName, title, description, fullReuseExportMode, includeWebContent, null);
        }
        
        public void ExportSolutionAsync(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent, object userState) {
            if ((this.onBeginExportSolutionDelegate == null)) {
                this.onBeginExportSolutionDelegate = new BeginOperationDelegate(this.OnBeginExportSolution);
            }
            if ((this.onEndExportSolutionDelegate == null)) {
                this.onEndExportSolutionDelegate = new EndOperationDelegate(this.OnEndExportSolution);
            }
            if ((this.onExportSolutionCompletedDelegate == null)) {
                this.onExportSolutionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportSolutionCompleted);
            }
            base.InvokeAsync(this.onBeginExportSolutionDelegate, new object[] {
                        solutionFileName,
                        title,
                        description,
                        fullReuseExportMode,
                        includeWebContent}, this.onEndExportSolutionDelegate, this.onExportSolutionCompletedDelegate, userState);
        }
        
        public string CreateWeb(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence) {
            return base.Channel.CreateWeb(url, title, description, templateName, language, locale, collationLocale, uniquePermissions, anonymous, presence);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateWeb(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateWeb(url, title, description, templateName, language, locale, collationLocale, uniquePermissions, anonymous, presence, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateWeb(System.IAsyncResult result) {
            return base.Channel.EndCreateWeb(result);
        }
        
        private System.IAsyncResult OnBeginCreateWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            string title = ((string)(inValues[1]));
            string description = ((string)(inValues[2]));
            string templateName = ((string)(inValues[3]));
            uint language = ((uint)(inValues[4]));
            uint locale = ((uint)(inValues[5]));
            uint collationLocale = ((uint)(inValues[6]));
            bool uniquePermissions = ((bool)(inValues[7]));
            bool anonymous = ((bool)(inValues[8]));
            bool presence = ((bool)(inValues[9]));
            return this.BeginCreateWeb(url, title, description, templateName, language, locale, collationLocale, uniquePermissions, anonymous, presence, callback, asyncState);
        }
        
        private object[] OnEndCreateWeb(System.IAsyncResult result) {
            string retVal = this.EndCreateWeb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateWebCompleted(object state) {
            if ((this.CreateWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateWebCompleted(this, new CreateWebCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateWebAsync(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence) {
            this.CreateWebAsync(url, title, description, templateName, language, locale, collationLocale, uniquePermissions, anonymous, presence, null);
        }
        
        public void CreateWebAsync(string url, string title, string description, string templateName, uint language, uint locale, uint collationLocale, bool uniquePermissions, bool anonymous, bool presence, object userState) {
            if ((this.onBeginCreateWebDelegate == null)) {
                this.onBeginCreateWebDelegate = new BeginOperationDelegate(this.OnBeginCreateWeb);
            }
            if ((this.onEndCreateWebDelegate == null)) {
                this.onEndCreateWebDelegate = new EndOperationDelegate(this.OnEndCreateWeb);
            }
            if ((this.onCreateWebCompletedDelegate == null)) {
                this.onCreateWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateWebCompleted);
            }
            base.InvokeAsync(this.onBeginCreateWebDelegate, new object[] {
                        url,
                        title,
                        description,
                        templateName,
                        language,
                        locale,
                        collationLocale,
                        uniquePermissions,
                        anonymous,
                        presence}, this.onEndCreateWebDelegate, this.onCreateWebCompletedDelegate, userState);
        }
        
        public void DeleteWeb(string url) {
            base.Channel.DeleteWeb(url);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteWeb(string url, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteWeb(url, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteWeb(System.IAsyncResult result) {
            base.Channel.EndDeleteWeb(result);
        }
        
        private System.IAsyncResult OnBeginDeleteWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            return this.BeginDeleteWeb(url, callback, asyncState);
        }
        
        private object[] OnEndDeleteWeb(System.IAsyncResult result) {
            this.EndDeleteWeb(result);
            return null;
        }
        
        private void OnDeleteWebCompleted(object state) {
            if ((this.DeleteWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteWebCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteWebAsync(string url) {
            this.DeleteWebAsync(url, null);
        }
        
        public void DeleteWebAsync(string url, object userState) {
            if ((this.onBeginDeleteWebDelegate == null)) {
                this.onBeginDeleteWebDelegate = new BeginOperationDelegate(this.OnBeginDeleteWeb);
            }
            if ((this.onEndDeleteWebDelegate == null)) {
                this.onEndDeleteWebDelegate = new EndOperationDelegate(this.OnEndDeleteWeb);
            }
            if ((this.onDeleteWebCompletedDelegate == null)) {
                this.onDeleteWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWebCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteWebDelegate, new object[] {
                        url}, this.onEndDeleteWebDelegate, this.onDeleteWebCompletedDelegate, userState);
        }
    }
}
