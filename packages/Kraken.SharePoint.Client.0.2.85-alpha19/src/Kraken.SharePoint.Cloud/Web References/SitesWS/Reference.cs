//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Kraken.SharePoint.Cloud.SitesWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SitesSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Sites : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatedFormDigestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatedFormDigestInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSolutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWebOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sites() {
            this.Url = global::Kraken.SharePoint.Cloud.Properties.Settings.Default.Kraken_SharePoint_Cloud_SitesWS_Sites;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSiteCompletedEventHandler GetSiteCompleted;
        
        /// <remarks/>
        public event GetSiteTemplatesCompletedEventHandler GetSiteTemplatesCompleted;
        
        /// <remarks/>
        public event GetUpdatedFormDigestCompletedEventHandler GetUpdatedFormDigestCompleted;
        
        /// <remarks/>
        public event GetUpdatedFormDigestInformationCompletedEventHandler GetUpdatedFormDigestInformationCompleted;
        
        /// <remarks/>
        public event ExportWebCompletedEventHandler ExportWebCompleted;
        
        /// <remarks/>
        public event ImportWebCompletedEventHandler ImportWebCompleted;
        
        /// <remarks/>
        public event ExportSolutionCompletedEventHandler ExportSolutionCompleted;
        
        /// <remarks/>
        public event CreateWebCompletedEventHandler CreateWebCompleted;
        
        /// <remarks/>
        public event DeleteWebCompletedEventHandler DeleteWebCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetSite", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSite(string SiteUrl) {
            object[] results = this.Invoke("GetSite", new object[] {
                        SiteUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAsync(string SiteUrl) {
            this.GetSiteAsync(SiteUrl, null);
        }
        
        /// <remarks/>
        public void GetSiteAsync(string SiteUrl, object userState) {
            if ((this.GetSiteOperationCompleted == null)) {
                this.GetSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteOperationCompleted);
            }
            this.InvokeAsync("GetSite", new object[] {
                        SiteUrl}, this.GetSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteOperationCompleted(object arg) {
            if ((this.GetSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetSiteTemplates", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSiteTemplates(uint LCID, out Template[] TemplateList) {
            object[] results = this.Invoke("GetSiteTemplates", new object[] {
                        LCID});
            TemplateList = ((Template[])(results[1]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteTemplatesAsync(uint LCID) {
            this.GetSiteTemplatesAsync(LCID, null);
        }
        
        /// <remarks/>
        public void GetSiteTemplatesAsync(uint LCID, object userState) {
            if ((this.GetSiteTemplatesOperationCompleted == null)) {
                this.GetSiteTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetSiteTemplates", new object[] {
                        LCID}, this.GetSiteTemplatesOperationCompleted, userState);
        }
        
        private void OnGetSiteTemplatesOperationCompleted(object arg) {
            if ((this.GetSiteTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTemplatesCompleted(this, new GetSiteTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUpdatedFormDigest() {
            object[] results = this.Invoke("GetUpdatedFormDigest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatedFormDigestAsync() {
            this.GetUpdatedFormDigestAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdatedFormDigestAsync(object userState) {
            if ((this.GetUpdatedFormDigestOperationCompleted == null)) {
                this.GetUpdatedFormDigestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatedFormDigestOperationCompleted);
            }
            this.InvokeAsync("GetUpdatedFormDigest", new object[0], this.GetUpdatedFormDigestOperationCompleted, userState);
        }
        
        private void OnGetUpdatedFormDigestOperationCompleted(object arg) {
            if ((this.GetUpdatedFormDigestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatedFormDigestCompleted(this, new GetUpdatedFormDigestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FormDigestInformation GetUpdatedFormDigestInformation(string url) {
            object[] results = this.Invoke("GetUpdatedFormDigestInformation", new object[] {
                        url});
            return ((FormDigestInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatedFormDigestInformationAsync(string url) {
            this.GetUpdatedFormDigestInformationAsync(url, null);
        }
        
        /// <remarks/>
        public void GetUpdatedFormDigestInformationAsync(string url, object userState) {
            if ((this.GetUpdatedFormDigestInformationOperationCompleted == null)) {
                this.GetUpdatedFormDigestInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatedFormDigestInformationOperationCompleted);
            }
            this.InvokeAsync("GetUpdatedFormDigestInformation", new object[] {
                        url}, this.GetUpdatedFormDigestInformationOperationCompleted, userState);
        }
        
        private void OnGetUpdatedFormDigestInformationOperationCompleted(object arg) {
            if ((this.GetUpdatedFormDigestInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatedFormDigestInformationCompleted(this, new GetUpdatedFormDigestInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/ExportWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            object[] results = this.Invoke("ExportWeb", new object[] {
                        jobName,
                        webUrl,
                        dataPath,
                        includeSubwebs,
                        includeUserSecurity,
                        overWrite,
                        cabSize});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            this.ExportWebAsync(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, null);
        }
        
        /// <remarks/>
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, object userState) {
            if ((this.ExportWebOperationCompleted == null)) {
                this.ExportWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportWebOperationCompleted);
            }
            this.InvokeAsync("ExportWeb", new object[] {
                        jobName,
                        webUrl,
                        dataPath,
                        includeSubwebs,
                        includeUserSecurity,
                        overWrite,
                        cabSize}, this.ExportWebOperationCompleted, userState);
        }
        
        private void OnExportWebOperationCompleted(object arg) {
            if ((this.ExportWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportWebCompleted(this, new ExportWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/ImportWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            object[] results = this.Invoke("ImportWeb", new object[] {
                        jobName,
                        webUrl,
                        dataFiles,
                        logPath,
                        includeUserSecurity,
                        overWrite});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            this.ImportWebAsync(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, null);
        }
        
        /// <remarks/>
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, object userState) {
            if ((this.ImportWebOperationCompleted == null)) {
                this.ImportWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportWebOperationCompleted);
            }
            this.InvokeAsync("ImportWeb", new object[] {
                        jobName,
                        webUrl,
                        dataFiles,
                        logPath,
                        includeUserSecurity,
                        overWrite}, this.ImportWebOperationCompleted, userState);
        }
        
        private void OnImportWebOperationCompleted(object arg) {
            if ((this.ImportWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportWebCompleted(this, new ImportWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/ExportSolution", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportSolution(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent) {
            object[] results = this.Invoke("ExportSolution", new object[] {
                        solutionFileName,
                        title,
                        description,
                        fullReuseExportMode,
                        includeWebContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportSolutionAsync(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent) {
            this.ExportSolutionAsync(solutionFileName, title, description, fullReuseExportMode, includeWebContent, null);
        }
        
        /// <remarks/>
        public void ExportSolutionAsync(string solutionFileName, string title, string description, bool fullReuseExportMode, bool includeWebContent, object userState) {
            if ((this.ExportSolutionOperationCompleted == null)) {
                this.ExportSolutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSolutionOperationCompleted);
            }
            this.InvokeAsync("ExportSolution", new object[] {
                        solutionFileName,
                        title,
                        description,
                        fullReuseExportMode,
                        includeWebContent}, this.ExportSolutionOperationCompleted, userState);
        }
        
        private void OnExportSolutionOperationCompleted(object arg) {
            if ((this.ExportSolutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSolutionCompleted(this, new ExportSolutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CreateWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateWeb(
                    string url, 
                    string title, 
                    string description, 
                    string templateName, 
                    uint language, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool languageSpecified, 
                    uint locale, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool localeSpecified, 
                    uint collationLocale, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool collationLocaleSpecified, 
                    bool uniquePermissions, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool uniquePermissionsSpecified, 
                    bool anonymous, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool anonymousSpecified, 
                    bool presence, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool presenceSpecified) {
            object[] results = this.Invoke("CreateWeb", new object[] {
                        url,
                        title,
                        description,
                        templateName,
                        language,
                        languageSpecified,
                        locale,
                        localeSpecified,
                        collationLocale,
                        collationLocaleSpecified,
                        uniquePermissions,
                        uniquePermissionsSpecified,
                        anonymous,
                        anonymousSpecified,
                        presence,
                        presenceSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWebAsync(
                    string url, 
                    string title, 
                    string description, 
                    string templateName, 
                    uint language, 
                    bool languageSpecified, 
                    uint locale, 
                    bool localeSpecified, 
                    uint collationLocale, 
                    bool collationLocaleSpecified, 
                    bool uniquePermissions, 
                    bool uniquePermissionsSpecified, 
                    bool anonymous, 
                    bool anonymousSpecified, 
                    bool presence, 
                    bool presenceSpecified) {
            this.CreateWebAsync(url, title, description, templateName, language, languageSpecified, locale, localeSpecified, collationLocale, collationLocaleSpecified, uniquePermissions, uniquePermissionsSpecified, anonymous, anonymousSpecified, presence, presenceSpecified, null);
        }
        
        /// <remarks/>
        public void CreateWebAsync(
                    string url, 
                    string title, 
                    string description, 
                    string templateName, 
                    uint language, 
                    bool languageSpecified, 
                    uint locale, 
                    bool localeSpecified, 
                    uint collationLocale, 
                    bool collationLocaleSpecified, 
                    bool uniquePermissions, 
                    bool uniquePermissionsSpecified, 
                    bool anonymous, 
                    bool anonymousSpecified, 
                    bool presence, 
                    bool presenceSpecified, 
                    object userState) {
            if ((this.CreateWebOperationCompleted == null)) {
                this.CreateWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWebOperationCompleted);
            }
            this.InvokeAsync("CreateWeb", new object[] {
                        url,
                        title,
                        description,
                        templateName,
                        language,
                        languageSpecified,
                        locale,
                        localeSpecified,
                        collationLocale,
                        collationLocaleSpecified,
                        uniquePermissions,
                        uniquePermissionsSpecified,
                        anonymous,
                        anonymousSpecified,
                        presence,
                        presenceSpecified}, this.CreateWebOperationCompleted, userState);
        }
        
        private void OnCreateWebOperationCompleted(object arg) {
            if ((this.CreateWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWebCompleted(this, new CreateWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWeb(string url) {
            this.Invoke("DeleteWeb", new object[] {
                        url});
        }
        
        /// <remarks/>
        public void DeleteWebAsync(string url) {
            this.DeleteWebAsync(url, null);
        }
        
        /// <remarks/>
        public void DeleteWebAsync(string url, object userState) {
            if ((this.DeleteWebOperationCompleted == null)) {
                this.DeleteWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWebOperationCompleted);
            }
            this.InvokeAsync("DeleteWeb", new object[] {
                        url}, this.DeleteWebOperationCompleted, userState);
        }
        
        private void OnDeleteWebOperationCompleted(object arg) {
            if ((this.DeleteWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWebCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Template {
        
        private int idField;
        
        private string titleField;
        
        private string nameField;
        
        private bool isUniqueField;
        
        private bool isHiddenField;
        
        private string descriptionField;
        
        private string imageUrlField;
        
        private bool isCustomField;
        
        private bool isSubWebOnlyField;
        
        private bool isRootWebOnlyField;
        
        private string displayCategoryField;
        
        private string filterCategoriesField;
        
        private bool hasProvisionClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsCustom {
            get {
                return this.isCustomField;
            }
            set {
                this.isCustomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsSubWebOnly {
            get {
                return this.isSubWebOnlyField;
            }
            set {
                this.isSubWebOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsRootWebOnly {
            get {
                return this.isRootWebOnlyField;
            }
            set {
                this.isRootWebOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DisplayCategory {
            get {
                return this.displayCategoryField;
            }
            set {
                this.displayCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilterCategories {
            get {
                return this.filterCategoriesField;
            }
            set {
                this.filterCategoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasProvisionClass {
            get {
                return this.hasProvisionClassField;
            }
            set {
                this.hasProvisionClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class FormDigestInformation {
        
        private string digestValueField;
        
        private int timeoutSecondsField;
        
        private string webFullUrlField;
        
        private string libraryVersionField;
        
        private string supportedSchemaVersionsField;
        
        /// <remarks/>
        public string DigestValue {
            get {
                return this.digestValueField;
            }
            set {
                this.digestValueField = value;
            }
        }
        
        /// <remarks/>
        public int TimeoutSeconds {
            get {
                return this.timeoutSecondsField;
            }
            set {
                this.timeoutSecondsField = value;
            }
        }
        
        /// <remarks/>
        public string WebFullUrl {
            get {
                return this.webFullUrlField;
            }
            set {
                this.webFullUrlField = value;
            }
        }
        
        /// <remarks/>
        public string LibraryVersion {
            get {
                return this.libraryVersionField;
            }
            set {
                this.libraryVersionField = value;
            }
        }
        
        /// <remarks/>
        public string SupportedSchemaVersions {
            get {
                return this.supportedSchemaVersionsField;
            }
            set {
                this.supportedSchemaVersionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSiteCompletedEventHandler(object sender, GetSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSiteTemplatesCompletedEventHandler(object sender, GetSiteTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Template[] TemplateList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Template[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUpdatedFormDigestCompletedEventHandler(object sender, GetUpdatedFormDigestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatedFormDigestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatedFormDigestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUpdatedFormDigestInformationCompletedEventHandler(object sender, GetUpdatedFormDigestInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatedFormDigestInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatedFormDigestInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormDigestInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormDigestInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExportWebCompletedEventHandler(object sender, ExportWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ImportWebCompletedEventHandler(object sender, ImportWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExportSolutionCompletedEventHandler(object sender, ExportSolutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportSolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportSolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateWebCompletedEventHandler(object sender, CreateWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteWebCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591