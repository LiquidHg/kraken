<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- the following empty conditions are here to force VS.net to recognize the configurations that we want, because we're using Contains almost eveyplkace else -->
  <PropertyGroup Condition=" '$(Configuration)' == 'DebugSP14_35' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'DebugSP15_45' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'DebugSP16_45' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'FxCopSP14_35' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'FxCopSP15_45' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'FxCopSP16_45' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'ReleaseSP14_35' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'ReleaseSP15_45' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'ReleaseSP16_45' ">
  </PropertyGroup>
  <!-- ensure that we override the default configuration name from Bewoulf Common -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">DebugSP16_45</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <!-- 
	Problem in referencing these includes from a SharePoint project when they use $(SolutionDir) instead of $(MSBuildProjectDirectory)
	-->
  <Import Project="$(MSBuildProjectDirectory)\..\vsproj.include.KrakenCommon.xml" />
  <Import Project="$(MSBuildProjectDirectory)\..\vsproj.include.DebugRelease.xml" />
  <Import Project="$(MSBuildProjectDirectory)\..\vsproj.include.TargetFramework.xml" />
  <!-- End: standard Kraken project build configurations -->
  <PropertyGroup>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{10AD7720-FD19-4DE7-B6CD-255163928458}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Kraken.SPSandboxLibrary.Nuget</RootNamespace>
    <AssemblyName>Kraken.SPSandboxLibrary.Nuget</AssemblyName>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="NuGetPackage.ps1" />
    <None Include="NuGetSetup.ps1" />
    <None Include="NuGet.exe" />
    <None Include="NuGet.config" />
    <None Include="Package.nuspec" />
    <None Include="Push.cmd" />
    <None Include="tools\init.ps1" />
    <None Include="tools\install.ps1" />
    <None Include="tools\uninstall.ps1" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="content\" />
    <Folder Include="src\" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="lib\net35-full\Kraken.SharePoint.SandboxTrust.dll" />
    <Content Include="lib\net35-full\Kraken.SharePoint.SandboxTrust.pdb" />
    <Content Include="lib\net45-full\Kraken.SharePoint.SandboxTrust.dll" />
    <Content Include="lib\net45-full\Kraken.SharePoint.SandboxTrust.pdb" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Kraken.Core.SandboxTrust\Kraken.Core.SandboxTrust.csproj">
      <Project>{dab0080d-c9b1-442e-84df-fc47ad8a442a}</Project>
      <Name>Kraken.Core.SandboxTrust</Name>
    </ProjectReference>
    <ProjectReference Include="..\Kraken.SPSandboxLibrary\Kraken.SPSandboxLibrary.csproj">
      <Project>{dff9b6ea-5c6e-4079-8506-181220fc7148}</Project>
      <Name>Kraken.SPSandboxLibrary</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>-->
  <Target Name="AfterBuild">
    <Delete Files=".\NuGet.log" />
    <Exec WorkingDirectory="$(MSBuildProjectDirectory)" Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " ContinueOnError="True" Command="PowerShell.exe -NoProfile -NonInteractive -WindowStyle Hidden -ExecutionPolicy Unrestricted -Command &quot;&amp; {.\NuGetPackage.ps1} &quot;" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>
    <Exec WorkingDirectory="$(MSBuildProjectDirectory)" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' " ContinueOnError="True" Command="PowerShell.exe -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command &quot;&amp; {.\NuGetPackage.ps1 -Publish} &quot;" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>
    <Message Text=" " Importance="High" />
    <Message Text="Build Exit Code: $(ExitCode)" Importance="High" />
    <Error Text="Encountered error(s) when creating package.%0aCheck the NuGet.log file for details." Condition=" '$(ExitCode)' == '1' " File="NuGet.log" />
    <Error Text="Created package but encountered error(s) when trying to publish it.%0aCheck the NuGet.log file for details." Condition=" '$(Configuration)|$(Platform)|$(ExitCode)' == 'Release|AnyCPU|2' " File="NuGet.log" />
    <Message Text="SUCCESS: Created package." Condition=" '$(Configuration)|$(Platform)|$(ExitCode)' == 'Debug|AnyCPU|0' " Importance="High" />
    <Message Text="SUCCESS: Published package." Condition=" '$(Configuration)|$(Platform)|$(ExitCode)' == 'Release|AnyCPU|0' " Importance="High" />
  </Target>
</Project>